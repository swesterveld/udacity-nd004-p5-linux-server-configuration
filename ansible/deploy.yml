---
- name: Perform Basic Configuration
  hosts: udacity_p5
  tasks:
    - name: hostname set to catalog.silwesterveld.com
      hostname:
        name: catalog.silwesterveld.com

    - name: hosts file configured with catalog.silwesterveld.com
      lineinfile:
        dest: /etc/hosts
        state: present
        regexp: "^52.38.60.164"
        line: "52.38.60.164 catalog catalog.silwesterveld.com"

    - name: user grader exists
      user:
        name: grader

    - name: user grader can sudo
      lineinfile:
        dest: /etc/sudoers.d/grader
        create: yes
        mode: 0400
        owner: root
        group: root
        state: present
        regexp: "^%grader"
        line: "%grader ALL=(ALL) NOPASSWD:ALL"
        validate: visudo --quiet --check --file=%s

    - name: APT package cache up-to-date
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: packages upgraded
      apt:
        upgrade: safe

    - name: timezone set to Etc/UTC
      copy:
        content: "Etc/UTC\n"
        dest: /etc/timezone
      register: timezone

    - name: timezone data reconfigured
      shell: dpkg-reconfigure -f noninteractive tzdata
      when: timezone.changed

- name: Secure Server
  hosts: udacity_p5
  vars:
      server_domain: silwesterveld.com

  tasks:
      - name: SSH is listening on port 2200
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^Port"
          line: "Port 2200"
          state: present
        notify: Restart SSH

      - name: root login is disabled
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^PermitRootLogin"
          line: "PermitRootLogin no"
          state: present
        notify: Restart SSH

      - name: password authentication is disabled
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^PasswordAuthentication"
          line: "PasswordAuthentication no"
          state: present
        notify: Restart SSH

      - name: key-based authentication is enforced
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^PubkeyAuthentication"
          line: "PubkeyAuthentication yes"
          state: present
        notify: Restart SSH

      - name: UFW is installed
        apt:
          name: ufw

      - name: UFW is enabled with policy to deny by default
        ufw:
          state: enabled
          policy: deny

      - name: incoming traffic allowed on port 2200 (for SSH)
        ufw:
          rule: allow
          port: 2200
          proto: tcp
      - name: incoming traffic allowed on port 80 (HTTP)
        ufw:
          rule: allow
          port: 80
          proto: tcp
      - name: incoming traffic allowed on port 123 (NTP)
        ufw:
          rule: allow
          port: 123
          proto: tcp

      - name: packages for extra security measures installed
        apt:
          name:
            - fail2ban
            - unattended-upgrades
            - logwatch
          state: installed

      - name: unattended upgrades configured
        copy:
          src: apt_periodic
          dest: /etc/apt/apt.conf.d/10periodic

      - name: Postfix configured to relay email for Logwatch
        debconf:
          name: postfix
          question: "{{ item.question }}"
          value: "{{ item.value }}"
          vtype: "{{ item.vtype }}"
        with_items:
            - { question: "postfix/mailname",
                value: "{{ ansible_fqdn }}",
                vtype: "string" }
            - { question: "postfix/mail_mailer_type",
                value: "Internet Site",
                vtype: "string" }

      - name: Logwatch configured for daily log summary
        lineinfile:
          dest: /etc/cron.daily/00logwatch
          regexp: "^/usr/sbin/logwatch"
          line: "/usr/sbin/logwatch --output mail --mailto logwatch@{{ server_domain }} --detail high"
          state: present
          create: yes

  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted

- name: Install Application
  hosts: udacity_p5
  vars:
      db_name: beercatalog
      db_user: connoisseur
      db_pass: michaeljackson
      git_repo: https://github.com/swesterveld/udacity-nd004-p3-item-catalog.git
      server_domain: silwesterveld.com
      server_fqdn: catalog.silwesterveld.com
      server_port: 80
      web_docroot: /var/www/catalog
      web_catalog: /var/www/catalog
      web_static: /var/www/catalog/static
      wsgi_script: /var/www/catalog/app.wsgi
  tasks:

    - name: Apache with mod_wsgi installed
      apt:
        name:
          - apache2
          - libapache2-mod-wsgi
        update_cache: yes
        state: latest

    - name: mod_wsgi enabled
      apache2_module:
        name: wsgi
        state: present
      notify: Restart Apache2

    - name: packages needed for Catalog App installed
      apt:
        name:
          - python-flask
          - python-pip
          - python-psycopg2
          - python-sqlalchemy

    - name: PyPI package oauth2client installed
      pip:
        name: oauth2client
        state: present

    - name: PyPI package requests installed
      pip:
        name: requests
        state: present

    - name: Git installed
      apt:
        name: git
        state: present

    - name: Catalog App project cloned
      git:
        repo: "{{ git_repo }}"
        dest: /root/catalog_clone
        update: no
        version: master

    - name: Catalog App synchronized to docroot
      synchronize:
        src: /root/catalog_clone/vagrant/catalog/
        dest: "{{ web_docroot }}"
        rsync_opts:
          - "--exclude=.git"
      delegate_to: "{{ inventory_hostname }}"

    - name: path to client_secrets.json patched
      replace:
        dest: "{{ web_catalog }}/catalog.py"
        regexp: "'client_secrets.json'"
        replace: "'/var/www/catalog/client_secrets.json'"

    - name: client_secrets.json patched
      replace:
        dest: "{{ web_catalog }}/client_secrets.json"
        regexp: "http://localhost:5000"
        replace: "http://localhost:5000\",\"http://localhost:8000\",\"http://catalog.silwesterveld.com"

      #lineinfile:
      #  dest: "{{ web_catalog }}/catalog.py"
      #  state: present
      #  regexp: "'client_secrets.json'"
      #  line: "'/var/www/catalog/client_secrets.json'"

    - name: WSGI set up for Beer Catalog website
      template:
        src: catalog_wsgi.j2
        dest: "{{ wsgi_script }}"

    - name: host configuration created for Beer Catalog website
      template:
        src: catalog_vhost.j2
        dest: /etc/apache2/sites-available/{{ server_fqdn }}.conf

    - name: default site configuration disabled
      file:
        dest: /etc/apache2/sites-enabled/000-default.conf
        state: absent

    - name: site configuration for Beer Catalog website enabled
      command: a2ensite {{ server_fqdn }}
      args:
        creates: /etc/apache2/sites-enabled/{{ server_fqdn }}.conf
      notify:
        - Restart Apache2

    #- name: IPv6 disabled
    #  sysctl:
    #    name: net.ipv6.conf.all.disable_ipv6
    #    value: 1

    #- name: IPv6 disabled
    #  sysctl:
    #    name: net.ipv6.conf.all.autoconf
    #    value: 0

    - name: PostgreSQL installed
      apt:
        name: postgresql
        update_cache: yes
        state: latest

    - name: user for database {{ db_name }} set up
      postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_pass }}"
      become: true
      become_user: postgres

    - name: database {{ db_name }} set up
      postgresql_db:
        name: "{{ db_name }}"
        encoding: UTF-8
        owner: "{{ db_user }}"
        state: present
      become: true
      become_user: postgres
      notify: Initialize Catalog Database

    #- name: Allow localhost to access beercatalog database
    #  postgresql_privs:
    #    database: beercatalog
    #    state: present
    #    roles: connoisseur
    #    privs: ALL

  handlers:
    - name: Restart Apache2
      service:
        name: apache2
        state: restarted

    - name: Initialize Catalog Database
      command: "python {{ web_docroot }}/database_init.py"
